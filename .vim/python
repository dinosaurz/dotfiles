"{{{Python setup
" Great Vim setup for Python
" Taken from https://dev.launchpad.net/UltimateVimPythonSetup

" Wrapping and tabs.
set tw=78 ts=4 sw=4 sta et sts=4 ai

" Syntax highlighting
let python_highlight_all = 1

" Better indenting
set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class

" Auto complete with ctrl-space
set omnifunc=pythoncomplete#Complete
inoremap <Nul> <C-x><C-o>

" Wrap comments at 72 chars
set formatoptions=cq textwidth=72 foldignore= wildignore+=*.py[co]

" Highlight end of line whitespace
highlight WhitespaceEOL ctermbg=red guibg=red
match WhitespaceEOL /\s\+$/

" `gf` jumps to the filename under the cursor
python << EOF
import os
import sys
import vim
for p in sys.path:
    if os.path.isdir(p):
        vim.command(r"set path+=%s" % (ps.replace(" ", r"\ ")))
EOF

" Use :make to see syntax errors. (:cn and :cp to move around, :dist to see
" all errors)
set makeprg=python\ -c\ \"import\ py_compile,sys;\ sys.stderr=sys.stdout;\ py_compile.compile(r'%')\"
set efm=%C\ %.%#,%A\ \ File\ \"%f\"\\,\ line\ %l%.%#,%Z%[%^\ ]%\\@=%m

" Execute a selection of code
" Use VISUAL to select the segment, then ctrl-h to execute.
python << EOL
import vim
def EvaluateCurrentRange():
    eval(compile('\n'.join(vim.current.range),'','exec'),globals())
EOL
map <C-h> :py EvaluateCurrentRange()
"}}}
vim:syntax=vim
